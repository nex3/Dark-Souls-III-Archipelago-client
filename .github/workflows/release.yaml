name: Release

on:
  push:
    tags: ['v*.*.*']

jobs:
  version:
    runs-on: ubuntu-latest

    outputs:
      version: ${{ steps.version.outputs.version }}
    steps:
    - id: version
      run: |
        ver="${{ github.ref_name }}"
        if [[ "$ver" == v* ]]; then
          ver="${ver:1}"
        fi
        echo "version=$ver" >> "$GITHUB_OUTPUT"

  build-mod:
    runs-on: windows-latest
    env:
      VCPKG_BINARY_SOURCES: "clear;x-gha,readwrite"

    steps:
    - uses: actions/checkout@v4
      with: {submodules: recursive}
    - uses: microsoft/setup-msbuild@v2
      with: {msbuild-architecture: x64}
    - run: msbuild --version

    # From https://learn.microsoft.com/en-us/vcpkg/consume/binary-caching-github-actions-cache
    - name: Export GitHub Actions cache environment variables
      uses: actions/github-script@v7
      with:
        script: |
          core.exportVariable('ACTIONS_CACHE_URL', process.env.ACTIONS_CACHE_URL || '');
          core.exportVariable('ACTIONS_RUNTIME_TOKEN', process.env.ACTIONS_RUNTIME_TOKEN || '');

    - run: vcpkg integrate install
      working-directory: archipelago-client
    - run: vcpkg install
      working-directory: archipelago-client
    - name: Build mod
      run: msbuild archipelago-client\archipelago-client.vcxproj -verbosity:diag '-property:Configuration=Release;Platform=x64'

    - uses: actions/upload-artifact@v4
      with:
        name: archipelago.dll
        path: archipelago-client\x64\Release\archipelago.dll
        if-no-files-found: error

  build-static:
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v4
      with:
        repository: nex3/SoulsRandomizers
        ref: unmissable-quests
        token: ${{ secrets.GH_TOKEN }}
        path: SoulsRandomizers
    - uses: actions/checkout@v4
      with:
        repository: nex3/SoulsIds
        ref: event-id
        path: SoulsIds
    - uses: actions/checkout@v4
      with:
        repository: thefifthmatt/SoulsFormats
        ref: dsms
        path: SoulsFormats
    - uses: microsoft/setup-msbuild@v2
    - uses: actions/checkout@v4
      with:
        repository: thefifthmatt/yet-another-tab-control
        path: yet-another-tab-control

    - name: Install dependencies
      run: dotnet restore SoulsRandomizers\SoulsRandomizers.sln

    - name: Build randomizer
      run: msbuild SoulsRandomizers\DS3Randomizer\DS3Randomizer.csproj '-property:Configuration=Release (Archipelago);PublishDir=bin\publish;PublishProtocol=FileSystem;_TargetId=Folder' '-t:Build;Publish'

    - uses: actions/upload-artifact@v4
      with:
        name: DS3Randomizer.exe
        path: SoulsRandomizers\DS3Randomizer\bin\publish\DS3Randomizer.exe
        if-no-files-found: error

  build-yaml:
    runs-on: windows-latest
    needs: [version]

    steps:
    - uses: actions/checkout@v4
      with:
        repository: nex3/Archipelago
        token: ${{ secrets.GH_TOKEN }}
        ref: unmissable-quests-stable
        fetch-depth: 0

    - run: git config --global user.email "nattlebot@nex-3.com"
    - run: git config --global user.name "Nattlebot Robobaum"

    - run: git merge --no-edit origin/unmissable-quests
    - run: git push origin unmissable-quests-stable
  
    - run: git checkout 0.5.0
    - run: git checkout unmissable-quests-stable worlds/dark_souls_3/

    - uses: actions/setup-python@v5
      with:
        python-version: 3.11
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pytest pytest-subtests pytest-xdist
        python ModuleUpdate.py --yes --force --append "WebHostLib\requirements.txt"

    - name: Generate YAML
      run: |
        python Launcher.py 'Generate Template Options'
        Move-Item -Path 'Players\Templates\Dark Souls III.yaml' -Destination 'Dark Souls III Options Template.yaml'

    - uses: actions/upload-artifact@v4
      with:
        name: Dark Souls III Options Template.yaml
        path: Dark Souls III Options Template.yaml
        if-no-files-found: error

  build-zip:
    runs-on: windows-latest
    needs: [version, build-mod, build-static, build-yaml]
    env:
      dir: DS3 Archipelago ${{ needs.version.outputs.version }}

    steps:
    - uses: actions/checkout@v4
      with:
        path: Dark-Souls-III-Archipelago-client

    - uses: actions/checkout@v4
      with:
        repository: nex3/SoulsRandomizers
        ref: unmissable-quests
        path: SoulsRandomizers

    - name: Download ModEngine2
      run: |
        Invoke-WebRequest -OutFile ME2.zip -Uri 'https://github.com/soulsmods/ModEngine2/releases/download/release-2.1.0/ModEngine-2.1.0.0-win64.zip'
        Expand-Archive ME2.zip -DestinationPath .

    - name: Download Archipelago repo
      run: |
        Invoke-WebRequest -OutFile Archipelago.zip -Uri "https://github.com/nex3/Archipelago/archive/refs/heads/unmissable-quests-stable.zip"
        Expand-Archive Archipelago.zip .

    - name: Assemble release
      run: |
        Move-Item -Path Dark-Souls-III-Archipelago-client\release -Destination $env:dir
        mkdir -p $env:dir\randomizer\spoiler_logs
        Move-Item -Path SoulsRandomizers\dist $env:dir\randomizer\dist
        Move-Item -Path $env:dir\randomizer\dist\Presets $env:dir\randomizer\presets
        Move-Item -Path $env:dir\randomizer\dist\Base\script $env:dir\randomizer\script
        Move-Item -Path $env:dir\randomizer\dist\Base\sfx $env:dir\randomizer\sfx
        Move-Item -Path ModEngine-*\modengine2, ModEngine-*\launchmod_darksouls3.bat, ModEngine-*\modengine2_launcher.exe -Destination $env:dir
        Compress-Archive -Path Archipelago-*\worlds\dark_souls_3 -DestinationPath $env:dir\dark_souls_3.apworld

    - name: Download archipelago.dll
      uses: actions/download-artifact@v4
      with:
        name: archipelago.dll
        path: ${{ env.dir }}

    - name: Download DS3Randomizer.exe
      uses: actions/download-artifact@v4
      with:
        name: DS3Randomizer.exe
        path: ${{ env.dir }}/randomizer

    - name: Download YAML
      uses: actions/download-artifact@v4
      with:
        name: Dark Souls III Options Template.yaml
        path: ${{ env.dir }}

    - name: Zip release
      run: Compress-Archive -Path $env:dir -DestinationPath "${{ env.dir }}.zip"

    - uses: softprops/action-gh-release@v2
      with:
        body_path: ${{ env.dir }}/README.txt
        files: ${{ env.dir }}.zip

  # Only push tags once everything else builds successfully, so that they don't break redeploys.
  tag-server:
    runs-on: ubuntu-latest
    needs: [version, build-zip]

    steps:
    - uses: actions/checkout@v4
      with:
        repository: nex3/Archipelago
        token: ${{ secrets.GH_TOKEN }}
        ref: unmissable-quests
        fetch-depth: 0

    - run: git tag ds3-${{ needs.version.outputs.version }}
    - run: git tag ds3-${{ needs.version.outputs.version }}-stable origin/unmissable-quests-stable
    - run: git push --tag

  tag-static:
    runs-on: ubuntu-latest
    needs: [build-zip]

    steps:
    - uses: actions/checkout@v4
      with:
        repository: nex3/SoulsRandomizers
        ref: unmissable-quests
        token: ${{ secrets.GH_TOKEN }}

    - run: git tag ${{ github.ref_name }}
    - run: git push --tag
